<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiannei.duxin.dao.CustomerBillMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.jiannei.duxin.entity.CustomerBill">
        <id column="id" property="id"/>
        <result column="dealer_id" property="dealerId"/>
        <result column="customer_id" property="customerId"/>
        <result column="customer_name" property="customerName"/>
        <result column="customer_phone" property="customerPhone"/>
        <result column="order_id" property="orderId"/>
        <result column="total_price" property="totalPrice"/>
        <result column="actual_price" property="actualPrice"/>
        <result column="paid" property="paid"/>
        <result column="remark" property="remark"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <insert id="add" parameterType="com.jiannei.duxin.entity.CustomerBill" keyProperty="id">
        insert into customer_bill(
        dealer_id ,
        customer_id ,
        customer_name ,
        customer_phone ,
        order_id ,
        total_price ,
        actual_price ,
        paid ,
        remark ,
        created_at ,
        updated_at ) values(
        #{dealerId}
        ,
        #{customerId}
        ,
        #{customerName}
        ,
        #{customerPhone}
        ,
        #{orderId}
        ,
        #{totalPrice}
        ,
        #{actualPrice}
        ,
        #{paid}
        ,
        #{remark}
        ,
        now()
        ,
        now()
        )
    </insert>
    <update id="update" parameterType="com.jiannei.duxin.entity.CustomerBill" keyProperty="id">
        update customer_bill set
        <if test="dealerId != null and dealerId != '' ">
            dealer_id = #{dealerId} ,
        </if>
        <if test="customerId != null and customerId != '' ">
            customer_id = #{customerId} ,
        </if>
        <if test="customerName != null and customerName != '' ">
            customer_name = #{customerName} ,
        </if>
        <if test="customerPhone != null and customerPhone != '' ">
            customer_phone = #{customerPhone} ,
        </if>
        <if test="orderId != null and orderId != '' ">
            order_id = #{orderId} ,
        </if>
        <if test="totalPrice != null and totalPrice != '' ">
            total_price = #{totalPrice} ,
        </if>
        <if test="actualPrice != null and actualPrice != '' ">
            actual_price = #{actualPrice} ,
        </if>
        <if test="paid != null and paid != '' ">
            paid = #{paid} ,
        </if>
        <if test="remark != null and remark != '' ">
            remark = #{remark} ,
        </if>
        updated_at = now() where id = #{id}
    </update>
    <delete id="delete" parameterType="int">
        delete from customer_bill where id = #{id}
    </delete>
    <select id="selectById" resultMap="BaseResultMap">
        select * from customer_bill where id = #{id}
    </select>
    <select id="selectAllByPage" resultMap="BaseResultMap" parameterType="hashmap">
        select * from customer_bill where 1=1
        <if test="dealerId != null and dealerId != '' ">
            AND dealer_id LIKE #{dealerId}
        </if>
        <if test="customerId != null and customerId != '' ">
            AND customer_id LIKE #{customerId}
        </if>
        <if test="customerName != null and customerName != '' ">
            AND customer_name LIKE #{customerName}
        </if>
        <if test="customerPhone != null and customerPhone != '' ">
            AND customer_phone LIKE #{customerPhone}
        </if>
        <if test="orderId != null and orderId != '' ">
            AND order_id LIKE #{orderId}
        </if>
        <if test="totalPrice != null and totalPrice != '' ">
            AND total_price LIKE #{totalPrice}
        </if>
        <if test="actualPrice != null and actualPrice != '' ">
            AND actual_price LIKE #{actualPrice}
        </if>
        <if test="paid != null and paid != '' ">
            AND paid LIKE #{paid}
        </if>
        <if test="remark != null and remark != '' ">
            AND remark LIKE #{remark}
        </if>
        <if test="createdAt != null and createdAt != '' ">
            AND created_at LIKE #{createdAt}
        </if>
        <if test="updatedAt != null and updatedAt != '' ">
            AND updated_at LIKE #{updatedAt}
        </if>
        limit #{pageNo}, #{pageSize}
    </select>
    <select id="selectAllBySize" resultType="java.lang.Integer" parameterType="hashmap">
        select count(id) from customer_bill where 1=1
        <if test="dealerId != null and dealerId != '' ">
            AND dealer_id LIKE #{dealerId}
        </if>
        <if test="customerId != null and customerId != '' ">
            AND customer_id LIKE #{customerId}
        </if>
        <if test="customerName != null and customerName != '' ">
            AND customer_name LIKE #{customerName}
        </if>
        <if test="customerPhone != null and customerPhone != '' ">
            AND customer_phone LIKE #{customerPhone}
        </if>
        <if test="orderId != null and orderId != '' ">
            AND order_id LIKE #{orderId}
        </if>
        <if test="totalPrice != null and totalPrice != '' ">
            AND total_price LIKE #{totalPrice}
        </if>
        <if test="actualPrice != null and actualPrice != '' ">
            AND actual_price LIKE #{actualPrice}
        </if>
        <if test="paid != null and paid != '' ">
            AND paid LIKE #{paid}
        </if>
        <if test="remark != null and remark != '' ">
            AND remark LIKE #{remark}
        </if>
        <if test="createdAt != null and createdAt != '' ">
            AND created_at LIKE #{createdAt}
        </if>
        <if test="updatedAt != null and updatedAt != '' ">
            AND updated_at LIKE #{updatedAt}
        </if>
    </select>

</mapper>
